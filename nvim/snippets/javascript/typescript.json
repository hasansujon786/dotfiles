{
  "twMerge": {
    "prefix": "twMerge",
    "body": [
      "/* yarn add tailwind-merge class-variance-authority clsx */",
      "import { clsx, type ClassValue } from 'clsx'",
      "import { twMerge } from 'tailwind-merge'\n",
      "export function cn(...inputs: ClassValue[]) {",
      "  return twMerge(clsx(inputs))",
      "}"
    ],
    "description": "twMerge"
  },
  "value as union type": {
    "prefix": "typeUnionValue",
    "body": "type ${2:TypeName} = (typeof ${1:object})[keyof typeof ${1:object}]",
    "description": "get object values as union type"
  },
  "key as union type": {
    "prefix": "typeUnionKey",
    "body": "type ${2:TypeName} = keyof typeof ${1:object}",
    "description": "get object values as union type"
  },
  "list key as union type": {
    "prefix": "typeUnionlistKey",
    "body": "type ${2:TypeName} = (typeof ${1:object})[number][$0];",
    "description": "get object values as union type"
  },
  "typePrettify": {
    "prefix": "typePrettify",
    "body": ["type Prettify<T> = {", "  [K in keyof T]: T[K]", "} & {}"],
    "description": "Prettify any nested type"
  }
}
