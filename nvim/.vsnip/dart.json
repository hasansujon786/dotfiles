{
  "Stateless Widget": {
    "prefix": "stlessW",
    "body": [
      "class ${1:name} extends StatelessWidget {",
      "  const ${1:name}({Key? key}) : super(key: key);\n",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Container();",
      "  }",
      "}"
    ],
    "description": "Create a Stateless widget"
  },
  "Stateful Widget": {
    "prefix": "stfulW",
    "body": [
      "class ${1:name} extends StatefulWidget {",
      "  const ${1:name}({Key? key}) : super(key: key);\n",
      "  @override",
      "  _${1:WidgetName}State createState() => _${1:WidgetName}State();",
      "}\n",
      "class _${1:index}State extends State<${1:index}> {",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Container();",
      "  }",
      "}"
    ],
    "description": "Create a Stateful widget"
  },
  "Material App Scaffold Stateless": {
    "prefix": "sfless",
    "description": "Scaffold a Material Screen",
    "body": [
      "import 'package:flutter/material.dart';\n",
      "class ${1:name} extends StatelessWidget {",
      "  const ${1:name}({Key? key}) : super(key: key);\n",
      "  static const routeName = '/${2:route_name}';",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Scaffold(",
      "      appBar: AppBar(",
      "        title: const Text('${1:Screen Title}'),",
      "      ),",
      "      body: const Center(",
      "        child: Text('Hello World'),",
      "      ),",
      "    );",
      "  }",
      "}"
    ]
  },
  "Material App Scaffold Stateful": {
    "prefix": "sfful",
    "description": "Scaffold a Material Screen",
    "body": [
      "import 'package:flutter/material.dart';\n",
      "class ${1:name} extends StatefulWidget {",
      "  const ${1:name}({Key? key}) : super(key: key);\n",
      "  static const routeName = '/${2:route_name}';",
      "  @override",
      "  _${1:WidgetName}State createState() => _${1:WidgetName}State();",
      "}\n",
      "class _${1:index}State extends State<${1:index}> {",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Scaffold(",
      "      appBar: AppBar(",
      "        title: const Text('${1:Screen Title}'),",
      "      ),",
      "      body: const Center(",
      "        child: Text('Hello World'),",
      "      ),",
      "    );",
      "  }",
      "}"
    ]
  },
  "for loop": {
    "prefix": "forlp",
    "body": [
      "for (int i = 1; i <= list.lenght; i++) {",
      "  print(i);",
      "}"
    ],
    "description": "for loop"
  },
  "for loop object": {
    "prefix": "forin",
    "body": [
      "for (final object in flybyObjects) {",
      "  print(object);",
      "}"
    ],
    "description": "for in loop"
  },
  "pushNamed": {
    "prefix": "nvp",
    "body": [
      "Navigator.pushNamed(context, ${1:RouteView.routeName});"
    ],
    "description": "Navigator.pushNamed"
  },
  "restorablePushNamed": {
    "prefix": "nvrp",
    "body": [
      "Navigator.restorablePushNamed(context, ${1:RouteView.routeName});"
    ],
    "description": "Navigator.restorablePushNamed"
  },
  "Theme.of": {
    "prefix": "to",
    "body": [
      "Theme.of(context)"
    ],
    "description": "Theme.of(context)"
  },
  "texttheme": {
    "prefix": "tot",
    "body": [
      "Theme.of(context).textTheme"
    ],
    "description": "textTheme"
  },
  "route_args": {
    "prefix": "rarg",
    "body": [
      "final args = ModalRoute.of(context)!.settings.arguments as Map<String, String?>;"
    ],
    "description": "Access route arguments"
  },
  "Screen height": {
    "prefix": "sh",
    "body": [
      "double height = MediaQuery.of(context).size.height;"
    ],
    "description": "Screen height"
  },
  "Quick Container": {
    "prefix": "dd",
    "body": [
      "Container(child: const Text('foobar'), color: Colors.blue.shade300),"
    ],
    "description": "Quick Container"
  },
  "iffe": {
    "prefix": "iffe",
    "body": [
      "(() {",
      "  ${1:// Content goes here;}",
      "})();"
    ],
    "description": "iffe"
  }
}
