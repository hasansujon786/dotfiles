{
  "twMerge": {
    "prefix": "twMerge",
    "body": [
      "// yarn add tailwind-merge class-variance-authority clsx",
      "import { clsx, type ClassValue } from 'clsx'",
      "import { twMerge } from 'tailwind-merge'\n",
      "export function cn(...inputs: ClassValue[]) {",
      "  return twMerge(clsx(inputs))",
      "}"
    ],
    "description": "twMerge"
  },
  "array from & map": {
    "prefix": "fromMap",
    "body": [
      "Array.from({ length: ${1:5} }, (_, i) => i + 1).map((item, idx) => ${0:// map item here})"
    ],
    "description": "create an array programmatically and map over"
  },
  "array from": {
    "prefix": "from",
    "body": ["Array.from({ length: ${1:5} }, (_, i) => ${2:i + 1})"],
    "description": "create an array programmatically"
  },
  "log": {
    "prefix": "cl",
    "body": "console.log($0)",
    "description": "console log"
  },
  "export all": {
    "prefix": "exfrom",
    "body": "export * from './$0'",
    "description": "export all"
  },
  "export default": {
    "prefix": "exasdefault",
    "body": "export { default as ${2:modulename} } from './$1'",
    "description": "export as default"
  },
  "jsxClassName": {
    "prefix": "cn",
    "body": "className='$0'",
    "description": "jsx className"
  }
}
