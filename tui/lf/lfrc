# Basic Settings
set shell powershell
set preview true     # set previewer ~/.config/lf/pv.sh
set drawbox true
set icons true
set ignorecase true
set incsearch true
set tabstop 2
set scrolloff 5
set info size
set hidden true
set icons true
set mouse true
#set color256 true
#set number true
#set relativenumber true
# set promptfmt "
# \033[38;5;8m\033[48;5;236m %u@%h \033[38;5;236m\033[48;5;234m
# \033[38;5;8m\033[48;5;234m %w\%f \033[0m\033[38;5;234m\033[0m
# "

# ---------------------------------------------------------------------------
# - Custom commands                                                         -
# ---------------------------------------------------------------------------
cmd mkdir %{{ mkdir }}
cmd touch %{{ touch }}
cmd doc $lf -doc | less
cmd quickLook &C:\\Users\\hasan\\AppData\\Local\\Programs\\QuickLook\\QuickLook.exe $Env:f
cmd systemOpen &explorer $Env:f
cmd fzf_cd ${{
  $res="$(fd --hidden --type directory --exclude '.git' | fzf --reverse --inline-info --preview 'ls {}')"
  if($res -ne "") {
    lf -remote "send $id cd $res"
  }
}}
cmd jump-to-git-root %{{
  $_root_dir="$(git rev-parse --show-toplevel)"
  if($_root_dir -eq "") {
    return lf -remote "send echo 'Not a Git repo!'"
  }
  $_pwd=$(pwd)
  $pattern = '[\\/]'
  $_pwd = $_pwd -replace $pattern, '/'
  if($_root_dir -eq $_pwd) {
    return lf -remote "send echo 'Already at Git repo root.'"
  }
  lf -remote "send $id cd $_root_dir"
}}
cmd bulk-rename !{{
  $tmp_file=($env:pwd + "\tmp_vimv.txt")
  $file=$env:fx.replace('\', '\\\')
  $file=$env:fx.replace('"', '')
  $file | Set-Content $tmp_file

  $tmp_file=$tmp_file.replace('\', '\\\')
  Invoke-Expression $("bash -c '/c/Users/hasan/dotfiles/tui/lf/vimv " + $tmp_file + "'")
}}


# ---------------------------------------------------------------------------
# - Bindings                                                                -
# ---------------------------------------------------------------------------
######## Remove some defaults ########
map y reload
map d reload
map p reload
map c reload
map r reload

######## Basic Functions ########
map I set hidden!
map H top
map L bottom
map e $nvim $Env:f
map w $bash
map W $powershell
map i $less $Env:f
map o open
map O systemOpen
map <enter> systemOpen
map R &{{ explorer $(dirname $Env:f) }}
map <space> quickLook
map V invert
map v :{{
  toggle
  down
}}
map <esc> :{{
  clear
  setfilter
  # unselect
}}


map a push :touch<space>
map A push :mkdir<space>
map <delete> delete
map <f-2> rename
map <c-v> paste
map <c-x> cut
map <c-c> copy
map <c-r> bulk-rename

map <a-d> half-down
map <a-u> half-up
map <a-c> fzf_cd
map -- jump-to-git-root
map <backspace> updir

map <m-1> open  # primary
map <m-2> updir  # secondary
map <m-3> systemOpen  # middle
map <m-up> up
map <m-down> down

map z. $du -h -d1 | less
map zf filter
# Archive bindings
map Zu %{{ unzip $Env:f }}
# *.tar.gz) tar -xzvf "$f" ;;
# *.tar.bz2) tar -xjvf "$f" ;;
# *.tar) tar -xvf "$f" ;;

# ---------------------------------------------------------------------------
# - Navigation Shortcut                                                     -
# ---------------------------------------------------------------------------

map .. cd ~/Desktop
map .c cd C:\\
map .f cd F:\\
map .e cd E:\\

map g. cd ~/dotfiles
map gd cd ~/Downloads
map gp cd ~/Pictures
map gv cd ~/Videos
map gm cd ~/Music
map gD cd ~/Documents
map gr cd F:\\repoes
map ga. cd ~/AppData
map gan cd ~/AppData/Local/nvim-data

# quickly cd into frecent directories using zoxide, zlua or rupa/z
cmd z ${{
  set +u
    dest=''
    prefix=''
    [[ "$OSTYPE" == "darwin"* ]] && prefix='/usr/local'
    if hash zoxide 2>/dev/null; then
      dest="$(zoxide query "$@")"
# See: https://github.com/skywind3000/z.lua
        elif [ -f "$prefix/etc/profile.d/z.lua" ]; then
        export _ZL_NO_PROMPT_COMMAND=1
        dest="$(lua "$prefix/etc/profile.d/z.lua" -e "$@")"
# See https://github.com/rupa/z
        elif [ -f "$prefix/etc/profile.d/z.sh" ] || [ -f "$prefix/share/z/z.sh"]; then
        export _Z_NO_PROMPT_COMMAND=1
        source "$prefix/etc/profile.d/z.sh" || source "$prefix/share/z/z.sh"
        dest="$(_z "$@" && pwd)"
        fi

        if test -n "${dest}"; then
          lf -remote "send $id cd '${dest}'"
        else
          lf -remote "send $id echo 'Invalid directory ${dest}'"
        fi
}}

cmd fzf_z ${{
  sel="$(zoxide query -l | fzf +s)"
    [ -d "$sel" ] && lf -remote "send $id cd \"$sel\""
}}
